# ðŸ¤– Lex Fridman AI Chatbot - Git Ignore
# Exclude temporary files, logs, and large model files

# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Virtual environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Jupyter Notebook
.ipynb_checkpoints

# PyTorch
*.pth
*.pt
*.ckpt

# Logs and monitoring
*.log
wandb/
mlruns/
runs/
logs/
*.out

# Model files (too large for git)
models/*/pytorch_model.bin
models/*/model.safetensors
models/*/tokenizer.json
models/*/vocab.json
models/*/merges.txt

# Keep model configs but exclude large files
!models/*/config.json
!models/*/generation_config.json
!models/*/special_tokens_map.json
!models/*/tokenizer_config.json
!models/*/training_args.bin

# Training checkpoints (too large)
models/*/checkpoint-*/
models/*/runs/

# Large data files
data/transcripts/*.json
processed_data/*.json
!processed_data/training_config.json

# Temporary files
*.tmp
*.temp
*.swp
*.swo
*~

# IDE files
.vscode/
.idea/
*.sublime-*

# OS files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Cache directories
.cache/
.pytest_cache/

# Streamlit
.streamlit/

# HuggingFace cache
.cache/huggingface/

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to not include the gitignore file in the repository because
#  it is a separate file that is managed by PyCharm and can be different for each developer.
.idea/

# ML/AI Specific
# Models and checkpoints
*.pth
*.pt
*.ckpt
*.model
*.bin
*.safetensors
models/*/pytorch_model.bin
models/*/model.safetensors
models/*/config.json
models/*/tokenizer.json
models/*/tokenizer_config.json
models/*/special_tokens_map.json
models/*/vocab.txt
models/*/merges.txt

# Large datasets
data/raw/
data/processed/
data/*.json
data/*.csv
data/*.txt
data/transcripts/
data/txt_files/
*.arrow
*.parquet

# Training logs and outputs
logs/
runs/
mlruns/
tensorboard_logs/
*.tfevents.*

# Temporary files
tmp/
temp/
.tmp/

# OS specific
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Video files (for transcript extraction)
*.mp4
*.avi
*.mov
*.mkv
*.webm

# Audio files
*.mp3
*.wav
*.flac
*.aac

# Large text files
*.txt.gz
*.json.gz

# Backup files
*.bak
*.backup
*~

# IDE and editor files
*.swp
*.swo
*~
.vscode/
*.sublime-*

# Local configuration
config.local.py
settings.local.py

# Cache directories
.cache/
cache/
__pycache__/

# Testing
.pytest_cache/
.coverage
htmlcov/

# Documentation build
docs/_build/
site/ 